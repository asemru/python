def personal_sum(numbers):
  incorrect_data = 0
  len1 = 0
  result = 0
  for i in numbers:
    if i == str(i):
    print(f'Некорректный тип данных для подсчёта суммы - {i}' )
  for i in numbers:
  try:
    result += i
    len1 += 1
  except TypeError:
    incorrect_data += 1
  return (result / len1) #Я не понимаю зачем мне надо было использовать incorrect_data, ведь без неё у меня всё получилось

def calculate_average(*numbers):
  for i in numbers:
    try:
      return personal_sum(i)
    except ZeroDivisionError:
      return 0
    except TypeError:
      print(f'В numbers записан некорректный тип данных')

print(f'Результат 1: {calculate_average("1, 2, 3")}') # Строка перебирается, но каждый символ - строковый тип
print(f'Результат 2: {calculate_average([1, "Строка", 3, "Ещё Строка"])}') # Учитываются только 1 и 3
print(f'Результат 3: {calculate_average(567)}') # Передана не коллекция
print(f'Результат 4: {calculate_average([42, 15, 36, 13])}') # Всё должно работать
